#name: Build and Publish images
#
#on:
#  push:
#    branches: [ master ]
#    paths-ignore:
#      - '**/README.md'
#      - '.github/'
#      - 'netlify.toml'
#      - 'docs/'
#
#jobs:
#  release:
#    name: Release
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#    - name: Setup Node.js
#      uses: actions/setup-node@v1
#      with:
#        node-version: '13'
#    - name: Add pluin for conventional commits
#      run: npm install conventional-changelog-conventionalcommits
#      working-directory: ./.github/workflows
#    - name: Release to GitHub
#      working-directory: ./.github/workflows
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      run: npx semantic-release
#
#  Publish:
#    name: Publish
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: '11'
#      - name: Cache Gradle packages
#        uses: actions/cache@v2
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle
#      - name: Execute script to build all fat jars
#        working-directory: ./ci-scripts
#        run: bash build_fatjar.sh
#      - name: Execute script to build and publish coinbase-integration
#        working-directory: ./ci-scripts
#        run: bash build_image_and_publish.sh coinbase-integration ${{ secrets.PAT_GHCR }}
#      - name: Execute script to build and publish graphql
#        working-directory: ./ci-scripts
#        run: bash build_image_and_publish.sh graphql ${{ secrets.PAT_GHCR }}
#      - name: Execute script to build and publish crypto-analyzer
#        working-directory: ./ci-scripts
#        run: bash build_image_and_publish.sh crypto-analyzer ${{ secrets.PAT_GHCR }}
